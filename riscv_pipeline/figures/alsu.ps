%!PS-Adobe-3.0 EPSF-3.0
%%Title: alsu.ps
%%Creator: XCircuit v0.0 rev980467732
%%CreationDate: Mon Jun 10 11:16:30 2024
%%Pages: 1
%%BoundingBox: 68 68 683 467
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce dup type /nametype eq { pop } if translate 0 0 moveto
	neg rotate dup type /nametype eq not { dup abs currentlinewidth exch
	div setlinewidth } { pop } ifelse dup abs scale clipped 1 and 1 eq
	{/clipped clipped 1 add def} if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup

/::adder {
begingate
1 1.000 -48 80 -48 16 -16 0 -48 -16 -48 -80 48 -48 48 48 -48 80 8 polygon
(+) {/Helvetica cf} 2 21 360.000 1.000 16 0 label
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 -0.000 1.000 0 0 pinlabel
endgate
} def

/digital::and {
% trivial
begingate
1 1.000 0 -48 -64 -48 -64 48 0 48 4 polygon
1 1.000 0 0 48 -90.000 90.000 xcarc
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0.000 1.000 48 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0.000 1.000 -64 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0.000 1.000 -64 -32 pinlabel
endgate
} def

/digital::or {
% trivial
begingate
1 1.000 -19 -48 96 30.000 90.000 xcarc
1 1.000 -19 48 96 270.000 330.000 xcarc
1 1.000 -112 0 80 -37.000 37.000 xcarc
1 1.000 -48 48 -19 48 2 polygon
1 1.000 -48 -48 -19 -48 2 polygon
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0.000 1.000 64 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0.000 1.000 -40 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0.000 1.000 -40 -32 pinlabel
endgate
} def

/digital::xor {
% trivial
begingate
1 1.000 -19 -48 96 30.000 90.000 xcarc
1 1.000 -19 48 96 270.000 330.000 xcarc
1 1.000 -128 0 80 -37.000 37.000 xcarc
1 1.000 -112 0 80 -37.000 37.000 xcarc
1 1.000 -48 48 -19 48 2 polygon
1 1.000 -48 -48 -19 -48 2 polygon
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0.000 1.000 64 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0.000 1.000 -56 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0.000 1.000 -56 -32 pinlabel
endgate
} def

/::mux4 {
begingate
(00) {/Helvetica cf} 2 21 0.000 0.800 -16 48 label
(01) {/Helvetica cf} 2 21 0.000 0.800 -16 16 label
1 1.000 -32 80 -32 -80 32 -48 32 48 -32 80 5 polygon
(10) {/Helvetica cf} 2 21 0.000 0.800 -16 -16 label
(11) {/Helvetica cf} 2 21 0.000 0.800 -16 -48 label
endgate
} def

/::sign {
begingate
0 1.000 -48 32 -48 -32 48 -32 48 32 4 polygon
(Sign) {/Helvetica cf} 2 21 0.000 1.000 0 0 label
endgate
} def

/::zeroext {
begingate
1 1.000 -112 -48 48 -48 48 16 -112 16 -112 -48 5 polygon
(ZeroExt) {/Helvetica cf} 2 21 0.000 1.000 -32 -16 label
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/::shifter {
begingate
(Shifter) {/Helvetica cf} 2 21 0.000 1.000 0 0 label
1 1.000 -64 -48 112 -48 64 48 -112 48 -64 -48 5 polygon
endgate
} def

/::mux8 {
begingate
(000) {/Helvetica cf} 2 21 0.000 0.800 -16 112 label
(001) {/Helvetica cf} 2 21 0.000 0.800 -16 80 label
1 1.000 -48 160 -48 -160 48 -128 48 128 -48 160 5 polygon
(010) {/Helvetica cf} 2 21 0.000 0.800 -16 48 label
(011) {/Helvetica cf} 2 21 0.000 0.800 -16 16 label
(100) {/Helvetica cf} 2 21 0.000 0.800 -16 -16 label
(101) {/Helvetica cf} 2 21 0.000 0.800 -16 -48 label
(110) {/Helvetica cf} 2 21 0.000 0.800 -16 -80 label
(111) {/Helvetica cf} 2 21 0.000 0.800 -16 -112 label
endgate
} def


%%EndSetup

%%Page: alsu 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 648 949 translate

1.000 0.000 -16 0 ::adder
1 1.000 -80 48 -368 48 2 polygon
1.000 0.000 -272 -64 generic::dot
(SrcA) {/Helvetica cf} 2 23 0.000 0.800 -384 48 label
(SrcB) {/Helvetica cf} 2 23 0.000 0.800 -384 -64 label
1.000 0.000 0 -512 digital::and
1.000 0.000 -16 -384 digital::or
1.000 0.000 -16 -256 digital::xor
0.000 0.000 1.000 scb
1.000 0.000 -16 112 generic::dot
sce
1 1.000 32 0 736 0 2 polygon
1 1.000 -272 -64 -272 -720 -96 -720 3 polygon
1 1.000 -64 -400 -272 -400 2 polygon
1 1.000 -80 -272 -272 -272 2 polygon
1.000 0.000 -272 -272 generic::dot
1.000 0.000 -272 -400 generic::dot
1 1.000 -304 48 -304 -688 -112 -688 3 polygon
1 1.000 -64 -368 -304 -368 2 polygon
1 1.000 -80 -240 -304 -240 2 polygon
1.000 0.000 -304 -240 generic::dot
1.000 0.000 -304 -368 generic::dot
1.000 0.000 -304 48 generic::dot
0.000 0.000 1.000 scb
(F[3]) {/Helvetica cf} 2 20 0.000 0.800 48 112 label
sce
1.000 0.000 272 -144 ::mux4
1 1.000 224 -192 144 -192 144 -80 3 polygon
1 1.000 224 -96 144 -96 2 polygon
1.000 0.000 144 -96 generic::dot
1.000 0.000 144 0 generic::dot
1 1.000 -208 -64 -368 -64 2 polygon
1 1.000 232 -160 8 0.000 360.000 xcarc
0.000 0.000 1.000 scb
1 1.000 208 -160 176 -160 176 -128 3 polygon
1 1.000 224 -128 64 -128 2 polygon
1.000 0.000 176 -128 generic::dot
1 1.000 800 48 800 96 2 polygon
(F[2:0]) {/Helvetica cf} 2 17 0.000 0.800 800 112 label
sce
1 1.000 48 -256 576 -256 576 -128 736 -128 4 polygon
0.000 0.000 1.000 scb
(F[0]) {/Helvetica cf} 2 23 0.000 0.800 48 -128 label
sce
1 1.000 144 -16 144 0 2 polygon
1.000 0.000 144 -48 ::sign
1.000 0.000 -16 192 ::sign
1.000 0.000 -16 256 ::sign
1 1.000 -80 192 -272 192 -272 -64 3 polygon
1 1.000 -304 48 -304 256 -80 256 3 polygon
0.000 0.000 1.000 scb
1 1.000 -16 80 -16 112 2 polygon
0.933 0.604 0.000 scb
1 1.000 848 -112 992 -112 2 polygon
(ALSURes) {/Helvetica cf} 2 20 0.000 0.800 1024 -112 label
sce
1 1.000 32 256 64 256 96 224 272 224 272 -64 5 polygon
1 1.000 32 192 64 192 96 224 3 polygon
1.000 0.000 96 224 generic::dot
1.000 0.000 464 -128 ::zeroext
1 1.000 304 -144 336 -144 2 polygon
(2) {/Helvetica cf} 2 19 0.000 0.800 144 176 label
1 1.000 144 240 128 208 2 polygon
1.000 135.000 96 224 generic::arrowhead
1.000 45.000 96 224 generic::arrowhead
1.000 0.000 -160 -48 digital::xor
1 1.000 -96 -48 -80 -48 2 polygon
0.000 0.000 1.000 scb
1 1.000 32 112 -240 112 -240 -32 -224 -32 4 polygon
sce
1.000 0.000 0 -704 ::shifter
1.000 0.000 800 -112 ::mux8
1 1.000 48 -384 608 -384 608 -192 736 -192 4 polygon
1 1.000 48 -512 640 -512 640 -224 736 -224 4 polygon
1 1.000 512 -144 544 -144 544 -64 736 -64 4 polygon
1 1.000 736 -96 672 -96 672 -64 3 polygon
1.000 0.000 672 -64 generic::dot
1 1.000 736 -32 704 -32 704 -688 80 -688 4 polygon
1 1.000 736 -160 704 -160 2 polygon
1.000 0.000 704 -160 generic::dot
1 1.000 -80 -496 -304 -496 2 polygon
1 1.000 -80 -528 -272 -528 2 polygon
1.000 0.000 -272 -528 generic::dot
1.000 0.000 -304 -496 generic::dot
(4:0) {/Helvetica cf} 2 20 0.000 0.800 -256 -608 label
-1.000 180.000 -272 -608 generic::arrowhead
1.000 0.000 -272 -608 generic::dot
(ShAmt) {/Helvetica cf} 2 31 0.000 0.800 -80 -736 label
0.000 0.000 1.000 scb
(F[3:2]) {/Helvetica cf} 2 17 0.000 0.800 -16 -608 label
1 1.000 -16 -624 -16 -640 2 polygon
sce
(Zero) {/Helvetica cf} 2 20 0.000 0.800 1024 16 label
(==0) {/Helvetica cf} 2 21 0.000 1.000 928 -48 label
0 1.000 880 -16 880 -80 976 -80 976 -16 4 polygon
0.933 0.604 0.000 scb
1 1.000 928 -112 928 -80 2 polygon
sce
1 1.000 928 -16 928 16 992 16 3 polygon
0.933 0.604 0.000 scb
1.000 0.000 928 -112 generic::dot
sce
1.000 90.000 -64 256 generic::arrowhead
1.000 90.000 -64 192 generic::arrowhead
1.000 90.000 -64 48 generic::arrowhead
1.000 90.000 -64 -48 generic::arrowhead
0.000 0.000 1.000 scb
1.000 90.000 -208 -32 generic::arrowhead
sce
1.000 90.000 240 -96 generic::arrowhead
0.000 0.000 1.000 scb
1.000 90.000 240 -128 generic::arrowhead
1.000 90.000 224 -160 generic::arrowhead
sce
1.000 90.000 240 -192 generic::arrowhead
1.000 90.000 352 -144 generic::arrowhead
1.000 90.000 752 0 generic::arrowhead
1.000 90.000 752 -32 generic::arrowhead
1.000 90.000 752 -64 generic::arrowhead
1.000 90.000 752 -96 generic::arrowhead
1.000 90.000 752 -128 generic::arrowhead
1.000 90.000 752 -160 generic::arrowhead
1.000 90.000 752 -192 generic::arrowhead
1.000 90.000 752 -224 generic::arrowhead
1.000 90.000 1008 16 generic::arrowhead
0.933 0.604 0.000 scb
1.000 90.000 1008 -112 generic::arrowhead
sce
1.000 90.000 -64 -240 generic::arrowhead
1.000 90.000 -64 -272 generic::arrowhead
1.000 90.000 -48 -368 generic::arrowhead
1.000 90.000 -48 -400 generic::arrowhead
1.000 90.000 -64 -496 generic::arrowhead
1.000 90.000 -64 -528 generic::arrowhead
1.000 90.000 -96 -688 generic::arrowhead
1.000 90.000 -80 -720 generic::arrowhead
0.000 0.000 1.000 scb
-1.000 180.000 -16 64 generic::arrowhead
sce
-1.000 180.000 272 -80 generic::arrowhead
0.000 0.000 1.000 scb
-1.000 180.000 800 32 generic::arrowhead
-1.000 180.000 -16 -656 generic::arrowhead
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
