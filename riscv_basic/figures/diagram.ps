%!PS-Adobe-3.0 EPSF-3.0
%%Title: diagram.ps
%%Creator: XCircuit v0.0 rev745898004
%%CreationDate: Mon Jun  3 15:45:27 2024
%%Pages: 1
%%BoundingBox: 68 68 1179 586
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce dup type /nametype eq { pop } if translate 0 0 moveto
	neg rotate dup type /nametype eq not { dup abs currentlinewidth exch
	div setlinewidth } { pop } ifelse dup abs scale clipped 1 and 1 eq
	{/clipped clipped 1 add def} if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup

/::dff {
begingate
0 1.000 -16 32 -16 -32 16 -32 16 32 4 polygon
1 1.000 -16 32 0 16 16 32 3 polygon
endgate
} def

/::imem {
begingate
0 1.000 -112 112 -112 -96 112 -96 112 112 4 polygon
(Instruction) {/Helvetica cf} 2 17 0.000 1.000 0 -16 label
(Memory) {/Helvetica cf} 2 17 0.000 1.000 0 -64 label
(A) {/Helvetica cf} 2 20 0.000 1.000 -96 64 label
(RD) {/Helvetica cf} 2 23 0.000 1.000 96 64 label
endgate
} def

/::regfile {
begingate
0 1.000 -112 208 -112 -256 112 -256 112 208 4 polygon
(Register) {/Helvetica cf} 2 17 0.000 1.000 0 -48 label
(File) {/Helvetica cf} 2 17 0.000 1.000 0 -96 label
(A2) {/Helvetica cf} 2 20 0.000 1.000 -96 48 label
(RD2) {/Helvetica cf} 2 23 0.000 1.000 96 48 label
(A1) {/Helvetica cf} 2 20 0.000 1.000 -96 112 label
(RD1) {/Helvetica cf} 2 23 0.000 1.000 96 112 label
1 1.000 -64 208 -48 192 -32 208 3 polygon
(WE3) {/Helvetica cf} 2 29 0.000 1.000 48 192 label
(A3) {/Helvetica cf} 2 20 0.000 1.000 -96 -160 label
(WD3) {/Helvetica cf} 2 20 0.000 1.000 -96 -208 label
endgate
} def

/::dmem {
begingate
0 1.000 -112 128 -112 -176 144 -176 144 128 4 polygon
(Data) {/Helvetica cf} 2 17 0.000 1.000 16 -16 label
(Memory) {/Helvetica cf} 2 17 0.000 1.000 16 -64 label
(A) {/Helvetica cf} 2 20 0.000 1.000 -96 64 label
(RD) {/Helvetica cf} 2 23 0.000 1.000 128 64 label
(WD) {/Helvetica cf} 2 20 0.000 1.000 -96 -128 label
1 1.000 -80 128 -64 112 -48 128 3 polygon
endgate
} def

/::alu {
begingate
1 1.000 -48 112 -48 16 -16 0 -48 -16 -48 -112 80 -48 80 48 -48 112 8 polygon
(ALU) {/Helvetica cf} 2 17 270.000 1.000 48 0 label
endgate
} def

/::adder {
begingate
1 1.000 -48 80 -48 16 -16 0 -48 -16 -48 -80 48 -48 48 48 -48 80 8 polygon
(+) {/Helvetica cf} 2 21 360.000 1.000 16 0 label
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 -0.000 1.000 0 0 pinlabel
endgate
} def

/::shifter {
begingate
(Shifter) {/Helvetica cf} 2 21 0.000 1.000 0 0 label
1 1.000 -64 -48 112 -48 64 48 -112 48 -64 -48 5 polygon
endgate
} def

/::instr_decom {
begingate
0 1.000 -48 224 -48 -352 48 -352 48 224 4 polygon
(Instruction Decoder) {/Helvetica cf} 2 21 90.000 1.000 0 -64 label
endgate
} def

/::mux4 {
begingate
(00) {/Helvetica cf} 2 21 0.000 0.800 -16 48 label
(01) {/Helvetica cf} 2 21 0.000 0.800 -16 16 label
1 1.000 -32 80 -32 -80 32 -48 32 48 -32 80 5 polygon
(10) {/Helvetica cf} 2 21 0.000 0.800 -16 -16 label
(11) {/Helvetica cf} 2 21 0.000 0.800 -16 -48 label
endgate
} def

/::mux2 {
begingate
(0) {/Helvetica cf} 2 21 0.000 0.800 -16 16 label
(1) {/Helvetica cf} 2 21 0.000 0.800 -16 -16 label
1 1.000 -32 48 -32 -48 32 -16 32 16 -32 48 5 polygon
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/digital::and {
% trivial
begingate
1 1.000 0 -48 -64 -48 -64 48 0 48 4 polygon
1 1.000 0 0 48 -90.000 90.000 xcarc
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0.000 1.000 48 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0.000 1.000 -64 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0.000 1.000 -64 -32 pinlabel
endgate
} def

/digital::xor {
% trivial
begingate
1 1.000 -19 -48 96 30.000 90.000 xcarc
1 1.000 -19 48 96 270.000 330.000 xcarc
1 1.000 -128 0 80 -37.000 37.000 xcarc
1 1.000 -112 0 80 -37.000 37.000 xcarc
1 1.000 -48 48 -19 48 2 polygon
1 1.000 -48 -48 -19 -48 2 polygon
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0.000 1.000 64 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0.000 1.000 -56 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0.000 1.000 -56 -32 pinlabel
endgate
} def


%%EndSetup

%%Page: diagram 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 1728 960 translate

1.000 0.000 -1040 128 ::dff
1.000 0.000 -784 64 ::imem
1.000 0.000 -96 16 ::regfile
1.000 0.000 912 16 ::dmem
1 1.000 -1024 128 -896 128 2 polygon
(PC) {/Helvetica cf} 2 16 0.000 0.800 -1008 144 label
(Instr) {/Helvetica cf} 2 16 0.000 0.800 -656 144 label
1.000 0.000 496 80 ::alu
1.000 0.000 -784 -432 ::adder
(4) {/Helvetica cf} 2 23 0.000 1.000 -880 -480 label
(PC1) {/Helvetica cf} 2 23 315.000 0.800 -1072 112 label
1 1.000 -944 128 -944 -384 -832 -384 3 polygon
1 1.000 -832 -480 -864 -480 2 polygon
1 1.000 -736 -432 -704 -432 -704 -544 -1536 -544 -1536 128 -1440 128 6 polygon
1.000 0.000 -944 128 generic::dot
1 1.000 -1040 192 -1040 160 2 polygon
(CLK) {/Helvetica cf} 2 17 0.000 0.800 -1040 208 label
1 1.000 -144 256 -144 224 2 polygon
(CLK) {/Helvetica cf} 2 17 0.000 0.800 -144 272 label
1 1.000 848 176 848 144 2 polygon
(CLK) {/Helvetica cf} 2 17 0.000 0.800 848 192 label
1 1.000 16 128 208 128 2 polygon
(RegA) {/Helvetica cf} 2 16 0.000 0.800 32 144 label
(RegB) {/Helvetica cf} 2 16 0.000 0.800 32 80 label
1 1.000 288 0 192 0 192 -448 16 -448 4 polygon
1 1.000 448 16 352 16 2 polygon
(SrcB) {/Helvetica cf} 2 19 0.000 0.800 432 32 label
(ALURes) {/Helvetica cf} 2 16 0.000 0.800 656 96 label
(Imm) {/Helvetica cf} 2 16 0.000 0.800 32 -432 label
0.000 0.000 1.000 scb
(SrcBSel) {/Helvetica cf} 2 17 0.000 0.800 320 320 label
(RegWrite) {/Helvetica cf} 2 17 0.000 0.800 -48 320 label
1 1.000 -48 224 -48 304 2 polygon
1 1.000 320 48 320 304 2 polygon
sce
1.000 0.000 464 -256 ::shifter
0.000 0.000 1.000 scb
(ShiftOp) {/Helvetica cf} 2 17 0.000 0.800 448 -160 label
1 1.000 448 -208 448 -176 2 polygon
sce
1 1.000 160 128 160 -240 368 -240 3 polygon
1.000 0.000 160 128 generic::dot
1 1.000 544 -240 704 -240 2 polygon
(ShiftRes) {/Helvetica cf} 2 28 0.000 0.800 576 -256 label
1.000 0.000 0.000 scb
(RegD) {/Helvetica cf} 2 20 0.000 0.800 1328 -240 label
sce
1 1.000 -672 128 -544 128 2 polygon
1.000 0.000 -496 0 ::instr_decom
1 1.000 -208 128 -448 128 2 polygon
(Rs1) {/Helvetica cf} 2 16 0.000 0.800 -432 144 label
1 1.000 -448 64 -208 64 2 polygon
(Rs2) {/Helvetica cf} 2 16 0.000 0.800 -432 80 label
(Rd) {/Helvetica cf} 2 16 0.000 0.800 -432 -128 label
1 1.000 -448 -144 -208 -144 2 polygon
1 1.000 -208 -192 -272 -192 2 polygon
1.000 0.000 0.000 scb
(RegD) {/Helvetica cf} 2 23 0.000 0.800 -288 -192 label
sce
1.000 0.000 1216 -240 ::mux4
1 1.000 192 -448 832 -448 832 -256 1184 -256 4 polygon
0.000 0.000 1.000 scb
(RegDSel) {/Helvetica cf} 2 17 0.000 0.800 1216 -128 label
1 1.000 1216 -176 1216 -144 2 polygon
sce
1.000 0.000 240 144 ::mux2
1 1.000 272 144 448 144 2 polygon
0.000 0.000 1.000 scb
(SrcASel) {/Helvetica cf} 2 17 0.000 0.800 240 256 label
1 1.000 240 176 240 240 2 polygon
sce
(SrcA) {/Helvetica cf} 2 19 0.000 0.800 432 160 label
1 1.000 208 160 144 160 144 368 -944 368 -944 128 5 polygon
1 1.000 1248 -240 1312 -240 2 polygon
(ShAmtImm) {/Helvetica cf} 2 16 0.000 0.800 -432 -272 label
1.000 0.000 128 -272 ::mux2
1 1.000 160 -272 384 -272 2 polygon
1 1.000 64 64 64 -256 96 -256 3 polygon
1.000 0.000 64 64 generic::dot
1 1.000 96 -288 -448 -288 2 polygon
(ShAmt) {/Helvetica cf} 2 31 0.000 0.800 384 -288 label
(4:0) {/Helvetica cf} 2 28 0.000 0.800 80 -192 label
-1.000 180.000 64 -192 generic::arrowhead
1.000 0.000 64 -192 generic::dot
0.000 0.000 1.000 scb
(ShAmtSel) {/Helvetica cf} 2 20 0.000 0.800 256 -368 label
1 1.000 128 -304 128 -368 240 -368 3 polygon
(ALUFunc) {/Helvetica cf} 2 17 0.000 0.800 512 256 label
1 1.000 512 160 512 240 2 polygon
sce
(Imm) {/Helvetica cf} 2 17 0.000 1.000 -96 -432 label
(Decoder) {/Helvetica cf} 2 17 0.000 1.000 -96 -480 label
0 1.000 -208 -384 -208 -512 16 -512 16 -384 4 polygon
0.000 0.000 1.000 scb
(ImmSel) {/Helvetica cf} 2 17 0.000 0.800 -96 -336 label
1 1.000 -96 -384 -96 -352 2 polygon
sce
1.000 0.000 192 -448 generic::dot
1.000 0.000 320 16 ::mux2
1 1.000 16 64 192 64 192 32 288 32 4 polygon
1 1.000 576 80 800 80 2 polygon
1 1.000 640 80 640 -208 704 -208 3 polygon
1 1.000 800 -112 64 -112 2 polygon
1.000 0.000 64 -112 generic::dot
0.000 0.000 1.000 scb
1 1.000 928 144 928 224 2 polygon
(MemWrite) {/Helvetica cf} 2 17 0.000 0.800 928 240 label
sce
1 1.000 1056 80 1120 80 1120 -192 1184 -192 4 polygon
(MemRes) {/Helvetica cf} 2 16 0.000 0.800 1072 96 label
1.000 0.000 640 80 generic::dot
0.000 0.000 1.000 scb
1 1.000 1008 144 1008 176 2 polygon
(MemSize) {/Helvetica cf} 2 17 0.000 0.800 1008 192 label
sce
1 1.000 -608 128 -608 -448 -208 -448 3 polygon
1.000 0.000 -608 128 generic::dot
1.000 0.000 736 -224 ::mux2
1 1.000 640 80 640 400 -1376 400 -1376 144 -1344 144 5 polygon
1 1.000 768 -224 1184 -224 2 polygon
(PC4) {/Helvetica cf} 2 16 0.000 0.800 -720 -416 label
(ExecRes) {/Helvetica cf} 2 16 0.000 0.800 784 -208 label
0.000 0.000 1.000 scb
1 1.000 -1312 160 -1312 224 2 polygon
(Jump) {/Helvetica cf} 2 17 0.000 0.800 -1312 240 label
sce
1.000 0.000 304 -656 ::adder
1 1.000 192 -448 192 -608 256 -608 3 polygon
1 1.000 -944 -384 -944 -704 256 -704 3 polygon
1 1.000 352 -656 416 -656 416 -768 -1504 -768 -1504 96 -1440 96 6 polygon
1 1.000 -704 -544 864 -544 864 -288 1184 -288 4 polygon
1.000 0.000 -704 -544 generic::dot
1.000 0.000 -944 -384 generic::dot
(PCBranch) {/Helvetica cf} 2 16 0.000 0.800 368 -640 label
-1.000 180.000 -1312 128 ::mux2
1.000 0.000 -1408 112 ::mux2
1 1.000 -1376 112 -1344 112 2 polygon
(PC3) {/Helvetica cf} 2 23 315.000 0.800 -1360 80 label
1 1.000 -1408 144 -1408 592 1168 592 1168 512 1120 512 5 polygon
1.000 0.000 1072 512 digital::and
0.000 0.000 1.000 scb
1 1.000 1008 528 944 528 2 polygon
(Branch) {/Helvetica cf} 2 23 0.000 0.800 928 528 label
sce
1 1.000 1008 496 976 496 976 448 944 448 4 polygon
(==0) {/Helvetica cf} 2 21 0.000 1.000 720 400 label
0 1.000 672 432 672 368 768 368 768 432 4 polygon
1 1.000 672 400 640 400 2 polygon
1.000 0.000 640 400 generic::dot
(PCSel) {/Helvetica cf} 2 28 0.000 0.800 1136 496 label
(ALUZero) {/Helvetica cf} 2 28 0.000 0.800 784 384 label
(BranchOK) {/Helvetica cf} 2 28 0.000 0.800 960 432 label
0.000 0.000 1.000 scb
(BranchNeg) {/Helvetica cf} 2 23 0.000 0.800 752 464 label
1 1.000 736 -304 736 -256 2 polygon
(ExecSel) {/Helvetica cf} 2 29 0.000 0.800 736 -320 label
sce
1.000 0.000 880 448 digital::xor
0.000 0.000 1.000 scb
1 1.000 832 464 768 464 2 polygon
sce
1 1.000 768 400 800 400 800 432 832 432 4 polygon
(Mask) {/Helvetica cf} 2 21 0.000 1.000 -1168 128 label
0 1.000 -1232 160 -1232 96 -1104 96 -1104 160 4 polygon
1 1.000 -1104 128 -1056 128 2 polygon
1 1.000 -1280 128 -1232 128 2 polygon
(PC2) {/Helvetica cf} 2 23 315.000 0.800 -1248 112 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
